import db, re
from aiogram import types, F, Router, Bot
from aiogram.types import FSInputFile
from aiogram.exceptions import TelegramBadRequest
from datetime import datetime, timedelta

txt_router = Router()

@txt_router.message(F.new_chat_members)
async def somebody_added(message: types.Message):
    for user in message.new_chat_members:
        chat_name = message.chat.title
        user_id = user.id
        username = user.username
        if not db.user_exists(user_id):
            db.add_user(user_id)
        if not db.user_have_username(user_id):
            db.add_username(user_id, username)
        if not username == db.get_username(user_id):
            db.add_username(user_id, username)
        xiao_hello_image = FSInputFile("xiao.jpg")
        await message.reply_photo(
            xiao_hello_image,
            caption=f"–ì–æ–π–¥–∞ {user.full_name}, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ {chat_name}.\n\n"
            "–ü–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ –ø—Ä–æ—á–∏—Ç–∞–π –ø—Ä–∞–≤–∏–ª–∞ (/rules), —á—Ç–æ–±—ã –Ω–µ –ø–æ–ª—É—á–∏—Ç—å –ø–∏–∑–¥—ã –æ—Ç –ö–æ–Ω—á–æ–Ω–∞.\n\n"
            "–ù–µ –∑–∞–±—É–¥—å—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–æ–Ω–¥–±—ç –∫–∞–º—á–∞–Ω –∫–æ–º–∞–Ω–¥–æ–π /privetbradok –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –±–ª–∞ –±–ª–∞ –±–ª–∞ —Å –±—Ä–∞–¥–∫–∞–º–∏.\n\n"
            "–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∫–∞—á–∞–Ω–µ–Ω–∏—è –≤ –Ω–∞—à–µ–º –∫–æ—á–æ–Ω –ø–æ–¥–≤–∞–ª–µ üòò"
        )

@txt_router.message(F.text)
async def message_handler(message: types.Message, bot: Bot): 
    user_id = message.from_user.id
    text = message.text
    username = message.from_user.username
    if not db.user_exists(user_id):
        db.add_user(user_id)
    if not db.user_have_username(user_id):
        db.add_username(user_id, username)
    if not username == db.get_username(user_id):
        db.add_username(user_id, username)
    db.update_count_messges(user_id)
    mute_user = check_ban_words(text)
    if mute_user:
        print(f"–ù–∞–π–¥–µ–Ω–æ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω–æ–µ —Å–ª–æ–≤–æ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        new_time = datetime.now() + timedelta(hours=2)
        timestamp = new_time.timestamp()
        try:
            if not db.user_exists(user_id):
                db.add_user(user_id)
            await bot.restrict_chat_member(message.chat.id, user_id, types.ChatPermissions(can_send_messages=False), until_date=timestamp)
            db.update_user_mutes(user_id=user_id, reason="–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã—Ö —Å–ª–æ–≤")
            await message.reply(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –æ–≥—Ä–∞–Ω–∏—á–µ–Ω –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã—Ö —Å–ª–æ–≤.")
        except TelegramBadRequest as e:
            message.reply(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ —Ç–µ–ª–µ–≥—Ä–∞–º–º–∞: {e}")
        except:
            message.reply("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")

def check_ban_words(text: str):
    mute_user = False
    ban_words_file = "ban_words.txt"

    # –ß–∏—Ç–∞–µ–º —Å–ø–∏—Å–æ–∫ –±–∞–Ω-—Å–ª–æ–≤ –∏–∑ —Ñ–∞–π–ª–∞
    with open(ban_words_file, 'r', encoding='utf-8') as f:
        ban_words = f.read().splitlines()  # –ß–∏—Ç–∞–µ–º —Å—Ç—Ä–æ–∫–∏ –∏ —É–±–∏—Ä–∞–µ–º —Å–∏–º–≤–æ–ª—ã –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏

    # –†–∞–∑–±–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ —Å–ª–æ–≤–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π
    words_in_text = re.findall(r'\b\w+\b', text.lower())  # \b –æ–±–æ–∑–Ω–∞—á–∞–µ—Ç –≥—Ä–∞–Ω–∏—Ü—ã —Å–ª–æ–≤

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –±–∞–Ω-—Å–ª–æ–≤ —Å—Ä–µ–¥–∏ —Å–ª–æ–≤ –≤ —Ç–µ–∫—Å—Ç–µ
    for word in ban_words:
        if word.lower() in words_in_text:
            mute_user = True
            break  # –ï—Å–ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ —Å–ª–æ–≤–æ –Ω–∞–π–¥–µ–Ω–æ, –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞

    return mute_user