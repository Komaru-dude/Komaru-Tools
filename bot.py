import asyncio
import logging
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters.command import Command
from aiogram.enums import ParseMode
from aiogram.types import FSInputFile
import db
from dotenv import load_dotenv
import os
from datetime import datetime, timedelta

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ dotenv
load_dotenv()

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–∞–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
logging.basicConfig(level=logging.INFO)
# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
token = os.getenv("BOT_API_TOKEN")
# –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
bot = Bot(token, ParseMode=ParseMode.MARKDOWN_V2)
# –î–∏—Å–ø–µ—Ç—á–µ—Ä
dp = Dispatcher()

@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer("i–¥i –Ω–∞—Ö—É–π")

@dp.message(Command("info"))
async def cmd_info(message: types.Message):
    # –î–æ—Å—Ç–∞—ë–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    user = message.from_user
    first_name = user.first_name
    user_id = user.id
    
    # –°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å –ø–æ ID
    profile_link = f"tg://user?id={user_id}"

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    clickable_name = f"<a href='{profile_link}'>{first_name}</a>"

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ db
    user_data = db.get_user_data(user_id)
    if not user_id == user_data[0]:
        db.update_user_id(user_data[0], user_id)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–º –∏–º–µ–Ω–µ–º –∏ —Å—Å—ã–ª–∫–æ–π –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å –ø–æ ID
    await message.reply(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ: {clickable_name}\n–ü—Ä–µ–¥—ã/–º—É—Ç—ã/–±–∞–Ω—ã: {user_data[1]} –∏–∑ {user_data[9]}/{user_data[2]}/{user_data[3]} \n\n–ê–π–¥–∏: {user_id}\n–ö–æ–ª-–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {user_data[7]}\n–†–µ–ø—É—Ç–∞—Ü–∏—è: {user_data[4]}\n–ü—Ä–µ—Ñ–∏–∫—Å: {user_data[6]}", parse_mode=ParseMode.HTML)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /warn
@dp.message(Command("warn"))
async def warn_cmd(message: types.Message):
    # –†–∞–∑–¥–µ–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –∏ –∞—Ä–≥—É–º–µ–Ω—Ç—ã
    parts = message.text.split(' ', 2)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ –≤–≤–µ–¥–µ–Ω—ã –∞—Ä–≥—É–º–µ–Ω—Ç—ã
    if len(parts) > 1:
        mention_or_id = parts[1]  # @username –∏–ª–∏ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        reason = parts[2] if len(parts) > 2 else "–ë–µ–∑ –ø—Ä–∏—á–∏–Ω—ã"
        
        # –ï—Å–ª–∏ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ @username
        if mention_or_id.startswith('@'):
            username = mention_or_id[1:]  # –£–±–∏—Ä–∞–µ–º '@' –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            
            try:
                # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –ø–æ —é–∑–µ—Ä–Ω–µ–π–º—É
                user = await bot.get_chat_member(message.chat.id, username)
                user_id = user.user.id  # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π
                db.update_user_warns(user_id, reason)
                await message.reply(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} –±—ã–ª –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω. –ü—Ä–∏—á–∏–Ω–∞: {reason}")
            except Exception as e:
                await message.reply(f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{username}. –û—à–∏–±–∫–∞: {str(e)}")
                logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
        
        # –ï—Å–ª–∏ –≤–≤–µ–¥–µ–Ω ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        elif mention_or_id.isdigit():
            user_id = int(mention_or_id)
            try:
                # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π
                db.update_user_warns(user_id, reason)
                await message.reply(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} –±—ã–ª –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω. –ü—Ä–∏—á–∏–Ω–∞: {reason}")
            except Exception as e:
                await message.reply(f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID {user_id}. –û—à–∏–±–∫–∞: {str(e)}")
        
        else:
            await message.reply("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ @username –∏–ª–∏ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
    else:
        await message.reply("–°–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–æ–º–∞–Ω–¥—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /warn @username –∏–ª–∏ /warn ID.")

@dp.message(F.new_chat_members)
async def somebody_added(message: types.Message):
    for user in message.new_chat_members:
        chat_name = message.chat.title
        xiao_hello_image = FSInputFile("xiao.jpg")
        await message.reply_photo(
            xiao_hello_image,
            caption=f"–ì–æ–π–¥–∞ {user.full_name}, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ {chat_name}.\n\n–ü–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ –¢–ê–ü–ö–ò –ë–õ–Ø, —á—Ç–æ–±—ã –Ω–µ –ø–æ–ª—É—á–∏—Ç—å –ø–∏–∑–¥—ã –æ—Ç –°—å–ø—Ä–µ–π.\n\n–ù–µ –∑–∞–±—É–¥—å—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–æ–Ω–¥–±—ç –∫–∞–º—á–∞–Ω –∫–æ–º–∞–Ω–¥–æ–π /privetbradok –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –±–ª–∞ –±–ª–∞ –±–ª–∞ —Å –±—Ä–∞–¥–∫–∞–º–∏.\n\n–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∫–∞—á–∞–Ω–µ–Ω–∏—è –≤ –Ω–∞—à–µ–º –∫–æ—á–æ–Ω –ø–æ–¥–≤–∞–ª–µ üòò"
        )

@dp.message(Command('privetbradok'))
async def cmd_privebradok(message: types.Message):
    await message.reply("–ü—Ä–∏–≤–µ –±—Ä–∞–¥–æ–∫!")

@dp.message(Command("warns"))
async def cmd_warn_history(message: types.Message):
    print("–ù–∞—á–∞–ª–æ")
    user_id = message.from_user.id
    print("–í—ã—Ç–∞—Å–∫–∏–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é")
    history = db.get_warns_history(user_id)
    print("–ï—Å–ª–∏ –∏—Å—Ç–æ—Ä–∏–∏ –Ω–µ—Ç")
    if not history:  # –ï—Å–ª–∏ –∏—Å—Ç–æ—Ä–∏–∏ –Ω–µ—Ç
        await message.reply("–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π.")
        return
    print("–§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç")
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞
    warns_count = len(history)
    history_text = "\n".join([f"{i + 1}. {reason}" for i, reason in enumerate(history)])
    response = (
        f"–í—Å–µ–≥–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: {warns_count}\n"
        f"–ò—Å—Ç–æ—Ä–∏—è:\n{history_text}"
    )
    print(response)
    await message.reply(response)

@dp.message(Command("rules"))
async def cmd_rules(message: types.Message):
    user = message.from_user
    komaru_rules_video = FSInputFile("rules.mp4")
    await message.reply_video(
        komaru_rules_video,
        caption=f"–ü—Ä–∏–≤–µ—Ç {user.full_name}\n–í–æ—Ç –∫—Ä–∞—Ç–∫–∏–π —Å–ø–∏—Å–æ–∫ –ø—Ä–∞–≤–∏–ª —á–∞—Ç–∞:\n\n–ù–µ —Ç–≤–æ—Ä–∏ —Ö—É–π–Ω–∏\n\n–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:\n\n/info - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ–±–µ\n/privetbradok - –ü—Ä–∏–≤–µ –±—Ä–∞–¥–æ–∫\n\n–´–≥—ã–≥—ã–≥—ã–≥"
    )



@dp.message(F.text)
async def message_handler(message: types.Message): 
    user_id = message.from_user.id
    text = message.text
    db.update_count_messges(user_id)
    mute_user = check_ban_words(text)
    if mute_user:
        print(f"–ù–∞–π–¥–µ–Ω–æ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω–æ–µ —Å–ª–æ–≤–æ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        duration = 7200
        new_time = datetime.now() + timedelta(seconds=duration)
        timestamp = new_time.timestamp()
        try:
            await bot.restrict_chat_member(message.chat.id, user_id, types.ChatPermissions(can_send_messages=False), until_date=timestamp)
            await message.reply(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –æ–≥—Ä–∞–Ω–∏—á–µ–Ω –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã—Ö —Å–ª–æ–≤.")
        except:
            message.reply("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–æ–±—â–∏—Ç–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É")

def check_ban_words(text: str):
    mute_user = False
    ban_words_file = "ban_words.txt"

    # –ß–∏—Ç–∞–µ–º —Å–ø–∏—Å–æ–∫ –±–∞–Ω-—Å–ª–æ–≤ –∏–∑ —Ñ–∞–π–ª–∞
    with open(ban_words_file, 'r', encoding='utf-8') as f:
        ban_words = f.read().splitlines()  # –ß–∏—Ç–∞–µ–º —Å—Ç—Ä–æ–∫–∏ –∏ —É–±–∏—Ä–∞–µ–º —Å–∏–º–≤–æ–ª—ã –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –±–∞–Ω-—Å–ª–æ–≤–∞ –≤ —Ç–µ–∫—Å—Ç–µ
    for word in ban_words:
        if word.lower() in text.lower():  # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –±–µ–∑ —É—á–µ—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞
            mute_user = True
            break  # –ï—Å–ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ —Å–ª–æ–≤–æ –Ω–∞–π–¥–µ–Ω–æ, –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞

    return mute_user

# –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ–ª–ª–∏–Ω–≥–∞ –Ω–æ–≤—ã—Ö –∞–ø–¥–µ–π—Ç–æ–≤
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())